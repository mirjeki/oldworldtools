@using OldWorldTools.Controllers;
@using OldWorldTools.Models.WFRPNames
@model OldWorldTools.Models.WFRPCharacter.CharacterSheet

@{
    ViewBag.Title = "WFRP Character Generator";
}

<h2>WFRP Character Generator</h2>

@*@using (Html.BeginForm("RandomiseCharacterName", "Home", FormMethod.Post))
{
    <div>
        <button type="submit">Randomise Character Name</button>
    </div>
}*@

@using (Html.BeginForm("GenerateCharacter", "Home", FormMethod.Post))
{
    <div>
        <span><button type="submit" name="submitButton" value="RandomiseName">Randomise Name</button></span>
        <div>
            @Html.LabelFor(model => model.Name)
        </div>
        <div>
            @Html.TextBoxFor(model => model.Name, new { style="width:250px;" })
        </div>
    </div>

    <div>
        <span><button type="submit" name="submitButton" value="RandomiseGender">Randomise Gender</button></span>
        <div>
            @Html.LabelFor(model => model.Gender)
        </div>
        <div>
            @Html.DropDownListFor(model => model.Gender, new SelectList(Enum.GetValues(typeof(GenderEnum))))
        </div>
    </div>

    <div>
        <span><button type="submit" name="submitButton" value="RandomiseSpecies">Randomise Species</button></span>
        <div>
            @Html.LabelFor(model => model.Species)
        </div>
        <div>
            @Html.DropDownListFor(model => model.Species, new SelectList(Enum.GetValues(typeof(SpeciesEnum))), new { onchange = @"
        var form = document.forms[0];
        form.submit();"})
        </div> 
    </div>

    <div>
        <span><button type="submit" name="submitButton" value="RandomiseRegion">Randomise Region</button></span>
        <div>
            @Html.LabelFor(model => model.Region)
        </div>
        <div>
            @Html.DropDownListFor(model => model.Region, new SelectList(Model.RegionsAvailable, "Key", "Value"))
        </div>
    </div>
    <div>
        <span><button type="submit" name="submitButton" value="RandomiseCharacteristics">Randomise Characteristics</button></span>
        <table class="table">
            <thead><h2>Characteristics</h2></thead>
            <thead>
                <tr>
                    <td></td>
                    @for (int i = 0; i < Model.Characteristics.Count(); i++)
                    {
                        @*Retain characteristic definitions in form submission*@
                        <div style="display:none;">@Html.TextBoxFor(model => model.Characteristics[i].Name)</div>
                        <div style="display:none;">@Html.TextBoxFor(model => model.Characteristics[i].ShortName)</div>
                        @*Retain characteristic definitions in form submission*@
                        <td>@Model.Characteristics[i].ShortName.ToString()</td>
                    }
                </tr>
                <tr>
                    <td>Initial</td>
                    @for (int i = 0; i < Model.Characteristics.Count(); i++)
                    {
                        <td>
                            @Html.TextBoxFor(model => model.Characteristics[i].Initial, new { style="width:50px;", @readonly=true})
                        </td>
                    }
                </tr>
                <tr>
                    <td></td>
                    @for (int i = 0; i < Model.Characteristics.Count(); i++)
                    {
                        <td>
                            <p>
                                <small>
                                    <small><small><small>Rolled: </small></small></small>
                                </small>
                                <small>
                                    <small>
                                        <small>
                                            <span style="display:none;">@Html.TextBoxFor(model => model.Characteristics[i].Rolled)</span>
                                            @Html.DisplayTextFor(model => model.Characteristics[i].Rolled)
                                        </small>
                                    </small>
                                </small>
                            </p>
                            <p>
                                <small>
                                    <small><small><small>Species Mod.: </small></small></small>
                                </small>
                                <small>
                                    <small>
                                        <small>
                                            <span style="display:none;">@Html.TextBoxFor(model => model.Characteristics[i].SpeciesModifier)</span>
                                            @Html.DisplayTextFor(model => model.Characteristics[i].SpeciesModifier)
                                        </small>
                                    </small>
                                </small>
                            </p>
                            <p>
                                <small>
                                    <small><small><small>Other Mod.: </small></small></small>
                                </small>
                                <small>
                                    <small>
                                        <small>
                                            <span style="display:none;">@Html.TextBoxFor(model => model.Characteristics[i].OtherModifier)</span>
                                            @Html.DisplayTextFor(model => model.Characteristics[i].OtherModifier)
                                        </small>
                                    </small>
                                </small>
                            </p>
                        </td>
                    }
                </tr>
                <tr>
                    <td>Advances</td>
                    @for (int i = 0; i < Model.Characteristics.Count(); i++)
                    {
                        <td>
                            @Html.TextBoxFor(model => model.Characteristics[i].Advances, new { style="width:50px;", onchange = @"
                    var form = document.forms[0];
                    form.submit();"})
                        </td>
                    }
                </tr>
                <tr>
                    <td>Current</td>
                    @for (int i = 0; i < Model.Characteristics.Count(); i++)
                    {
                        <td>@Model.Characteristics[i].CurrentValue()</td>
                    }
                </tr>
            </thead>
        </table>
    </div>


    <div>
        <span><button type="submit" name="submitButton" value="RandomiseCareer">Randomise Career</button></span>
        <div>
            @Html.LabelFor(model => model.Career)
        </div>
        <div>
            @Html.TextBoxFor(model => model.Career, new { @readonly = true })
        </div>
        <div>
            @Html.LabelFor(model => model.Class)
        </div>
        <div>
            @Html.TextBoxFor(model => model.Class, new { @readonly = true })
        </div>
        <div>
            @Html.LabelFor(model => model.CareerPath)
        </div>
        <div>
            @Html.TextBoxFor(model => model.CareerPath, new { @readonly = true })
        </div>
        <div>
            @Html.LabelFor(model => model.Status)
        </div>
        <div>
            @Html.TextBoxFor(model => model.Status, new { @readonly = true })
        </div>
        <table class="table" style="width:350px;">
            <thead><h2>Talents</h2></thead>
            @{
                for (var i = 0; i < Model.Talents.Count(); i++)
                {
                    <thead>
                        <tr>
                            <td>Name</td>
                            <td>Times Taken</td>
                        </tr>
                    </thead>
                    <tr>
                        <td>@Html.TextBoxFor(model => model.Talents[i], new { @readonly = true })</td>
                        <td>1</td>
                    </tr>
                }
            }
        </table>
        <table class="table" style="width:250px;">
            <thead><h2>Trappings</h2></thead>
            @{
                for (var i = 0; i < Model.Trappings.Count(); i++)
                {
                    <thead>
                        <tr>
                            <td>Name</td>
                            <td>Enc</td>
                        </tr>
                    </thead>
                    <tr>
                        <td>@Html.TextBoxFor(model => model.Trappings[i])</td>
                        <td>-</td>
                    </tr>
                }
            }
        </table>
    </div>

    <!-- Add other input fields as needed -->

    <div>
        <button type="submit" name="submitButton" value="Generate">Generate Character</button>
    </div>
}